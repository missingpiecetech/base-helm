suite: test deployment
templates:
  - charts/your-app/templates/app.yaml
tests:
  - it: should do basic template properly
    documentIndex: 5 # find the deployment manifest, in this case its the 6th generated
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: your-app
  - it: should have correct labels
    documentIndex: 5
    asserts:
      - equal:
          path: metadata.labels.owner
          value: ml
      - equal:
          path: metadata.labels.release
          value: latest
      - equal:
          path: metadata.labels.product
          value: your-app
      - equal:
          path: metadata.labels.type
          value: application
      - equal:
          path: metadata.labels.gitlab_project
          value: "your-app"
      - equal:
          path: metadata.labels.deploy_name
          value: va-your-app
      - equal:
          path: metadata.labels.app
          value: your-app
      - equal:
          path: metadata.labels.istio-injection
          value: enabled
  - it: should have correct annotations
    documentIndex: 5
    asserts:
      - equal:
          path: metadata.annotations["sidecar.istio.io/inject"]
          value: "true"
  - it: should have correct replicas
    documentIndex: 5
    asserts:
      - equal:
          path: spec.replicas
          value: 1
  - it: should have correct selector
    documentIndex: 5
    asserts:
      - equal:
          path: spec.selector.matchLabels.app
          value: your-app
      - equal:
          path: spec.selector.matchLabels.version
          value: "v1"
  - it: should have update strategy
    documentIndex: 5
    asserts:
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: "25%"
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: "25%"
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
  - it: should have correct imagePullSecrets
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: regsecret
  - it: should have correct service account
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: p21-embedded-app-aws-permissions-serviceaccount
  - it: should have correct container name
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].name
          value: your-app
  - it: should have correct image
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: 716840992537.dkr.ecr.us-west-2.amazonaws.com/your-app:latest
  - it: should pull in Secret properly
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].envFrom[0].secretRef.name
          value: your-app
  - it: should have correct resources
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: "125Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "100m"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: "512Mi"
  - it: should have correct ports
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: "http-port"
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8000
      - equal:
          path: spec.template.spec.containers[0].ports[0].protocol
          value: TCP
  - it: should have correct probes
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.exec.command[0]
          value: "grpc_health_probe"
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.exec.command[1]
          value: "-addr=:8000"
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 15
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.periodSeconds
          value: 5
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.exec.command[0]
          value: "grpc_health_probe"
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.exec.command[1]
          value: "-addr=:8000"
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
          value: 10
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.periodSeconds
          value: 5
  - it: should have correct security context
    documentIndex: 5
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext.privileged
          value: false