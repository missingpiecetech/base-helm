suite: test database deployment
templates:
  - charts/your-app/templates/app.yaml
tests:
  - it: should do basic template properly
    documentIndex: 11 # find the deployment manifest, in this case its the 6th generated
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: your-app-db
  - it: should have correct labels
    documentIndex: 11
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: "your-app"
      - equal:
          path: metadata.labels["app.kubernetes.io/version"]
          value: "1.16.0"
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: "Helm"
      - equal:
          path: metadata.labels.app
          value: "your-app"
  - it: should have correct selector
    documentIndex: 11
    asserts:
      - equal:
          path: spec.selector.matchLabels.app
          value: your-app-db
  - it: should have correct volumes
    documentIndex: 11
    asserts:
      - equal:
          path: spec.template.spec.volumes[0].name
          value: your-app-db
      - equal:
          path: spec.template.spec.volumes[0].persistentVolumeClaim.claimName
          value: your-app-db
  - it: should have correct container name
    documentIndex: 11
    asserts:
      - equal:
          path: spec.template.spec.containers[0].name
          value: your-app-db
  - it: should have correct image
    documentIndex: 11
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "postgres:latest"
  - it: should have correct ports
    documentIndex: 11
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 5432
  - it: should have correct volume mounts
    documentIndex: 11
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: your-app-db
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: "/var/lib/postgresql/data"
  - it: should have correct resources
    documentIndex: 11
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: "1Gi"
  - it: should have correct environmentals
    documentIndex: 11
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "POSTGRES_USER"
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: "postgres"
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: "POSTGRES_PASSWORD"
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: "postgres"
      - equal:
          path: spec.template.spec.containers[0].env[2].name
          value: "PGDATA"
      - equal:
          path: spec.template.spec.containers[0].env[2].value
          value: "/var/lib/postgresql/data/pgdata"