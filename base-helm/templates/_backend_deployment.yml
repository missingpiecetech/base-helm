{{- define "common.backendDeployment" -}}
{{- if not (or .Values.imageRepository .Values.backend.image.repository) -}}
{{- fail ".Values.imageRepository or .Values.backend.image.repository must be defined" -}}
{{- end -}}
{{- $name := .Values.backend.name | default (print .Chart.Name "-backend") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default .Chart.Name }}
      containers:
        - name: {{ .Values.backend.image.name | default $name }}
          image: "{{ .Values.backend.image.repository | default .Values.imageRepository }}/{{ .Values.backend.image.name | default $name }}-backend:{{ .Values.backend.image.tag }}"
          ports:
            - containerPort: {{ .Values.backend.port }}
          {{- if or .Values.environment.variables .Values.environment.secret }}
          envFrom:
            {{- if .Values.environment.variables }}
            - configMapRef:
                name: {{ .Chart.Name }}
            {{- end -}}
            {{- if .Values.environment.secret }}
            - secretRef:
                name: {{ .Values.environment.secret }}
            {{- end -}}
          {{- end }}
          env:
            {{- include "common.envVars" . | nindent 12 }}
          resources:
            limits:
              cpu: {{ .Values.backend.resources.limitCPU }}
              memory: {{ .Values.backend.resources.limitMemory }}
            requests:
              cpu: {{ .Values.backend.resources.cpu }}
              memory: {{ .Values.backend.resources.memory }}
{{- end -}}